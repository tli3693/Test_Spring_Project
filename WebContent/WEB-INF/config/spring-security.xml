<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true" >

		<headers>
			<cache-control />
		</headers>

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/test/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<access-denied-handler error-page="/403" />
		<form-login login-page="/home/login" default-target-url="/welcome"
			authentication-failure-url="/home/login?error" username-parameter="username"
			password-parameter="password" login-processing-url="/j_spring_security_check" />
		

		<logout logout-url="/j_spring_security_logout" logout-success-url="/home/login?logout" delete-cookies="JSESSIONID" />
		<csrf />

	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager alias="authenticationManager">
		<!-- <authentication-provider> <password-encoder ref="encoder" /> <user-service> 
			<user name="admin" password="$2a$10$DySypAjut0BT5HeC0KKZ5uZVZGIMpadDGROHLM5qkOAv9QS8GtJxK" 
			authorities="ROLE_ADMIN"/> </user-service> </authentication-provider> -->
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="oracleDataSource"
				users-by-username-query="select username,password, enabled from my_users where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?" />
		</authentication-provider>

	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>